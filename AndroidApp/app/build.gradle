apply plugin: 'com.android.application'

apply plugin: 'com.huawei.agconnect'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.gyibat.bridge.app"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 387
        versionName "3.8.7"
        multiDexEnabled true
        ndk {
            abiFilters 'armeabi-v7a'//,'x86',  'arm64-v8a'
        }
        manifestPlaceholders = [
                "apk.applicationId"     : "com.gyibat.bridge.app",
                "GETUI_APPID"           : "KdMYP3qZhN7GexAc9U3gC9",
                "plus.unipush.appid"    : "KdMYP3qZhN7GexAc9U3gC9",
                "plus.unipush.appkey"   : "db03lh1m8h89pJ4fQ2Tnt",
                "plus.unipush.appsecret": "yPp9awdcvX77neZc2Uvbi1",
                "XIAOMI_APP_ID":"2882303761519967800",
                "XIAOMI_APP_KEY":"5211996747800"
        ]
    }

    signingConfigs {
        config {
            storeFile file("../bridge.keystore")
            storePassword "bridge"
            keyAlias "bridge"
            keyPassword "bridge"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.config
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.config
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    aaptOptions {
        additionalParameters '--auto-add-overlay'
        ignoreAssetsPattern "!.svn:!.git:.*:!CVS:!thumbs.db:!picasa.ini:!*.scc:*~"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    applicationVariants.all { variant ->
        def apkDir = new File("${project.rootDir.absolutePath}/apk")
        variant.getPackageApplication().outputDirectory = apkDir
        if (variant.buildType.name == "release") {
            variant.outputs.all { output ->
                outputFileName = "桥梁App_v${defaultConfig.versionName}release.apk"
            }
        } else {
            variant.outputs.all { output ->
                outputFileName = "桥梁App_v${defaultConfig.versionName}_debug.apk"
            }
        }
    }
}
repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation fileTree(include: ['*.aar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    /*uniapp所需库-----------------------开始*/
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.facebook.fresco:fresco:2.5.0'
    implementation "com.facebook.fresco:animated-gif:2.5.0"
    /*uniapp所需库-----------------------结束*/
    // 基座需要，必须添加
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'com.alibaba:fastjson:1.1.46.android'

    //原生插件
    implementation project(':uniplugin_module')

    implementation 'com.huawei.hms:push:5.0.2.300'
    compileOnly fileTree(dir: '../libs', include: ['amap-libs-release.aar'])
    compileOnly fileTree(dir: '../libs', include: ['geolocation-amap-release.aar'])
    compileOnly fileTree(dir: '../libs', include: ['fingerprint-release.aar'])
}
